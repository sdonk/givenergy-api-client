[tool.poetry]
name = "givenergy-api-client"
version = "0.1.0"
description = "Python Client for Givenergy cloud API"
authors = ["Alessandro De Noia <alessandrodenoia@fastmail.com>"]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Software Development",
    "Typing :: Typed",
]
packages = [{include = "givenergy_api_client"}]

[tool.poetry.dependencies]
python = "^3.10"
httpx = "^0.27.0"
pydantic = "^2.8.2"
email-validator = "^2.2.0"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-sugar = "^1.0.0"
pytest-cov = "^5.0.0"
mypy = "^1.11.1"
black = "^24.8.0"
flake8 = "^7.1.1"
pylint = "^3.2.6"
pytest-asyncio = "^0.23.8"
pre-commit = "^3.8.0"
isort = "^5.13.2"
ipython = "^8.26.0"
ipdb = "^0.13.13"
rich = "^13.7.1"
pytest-httpx = "^0.30.0"
mkdocs = "^1.6.1"
mkdocs-material = "^9.5.34"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# ==== pytest ====
[tool.pytest.ini_options]
addopts = "--verbose --cov --cov-report term-missing --cov-context=test --cov-config=pyproject.toml --cov-append"
norecursedirs = [
    ".tox",
    ".git",
    "*/migrations/*",
    "*/static/*",
    "docs",
    "venv",
    "*/{{cookiecutter.project_slug}}/*",
]


# ==== black ====
[tool.black]
line-length = 119
target-version = ['py312']


# ==== coverage ====
[tool.coverage.run]
branch = true
omit = [
    "*/tests/*"
]


[tool.coverage.report]
ignore_errors = true
exclude_lines = [
    "pragma: no cover",
]

# ==== isort ====
[tool.isort]
profile = "black"
line_length = 119
known_first_party = [
    "tests",
    "scripts",
    "hooks",
]


# ==== mypy ====
[tool.mypy]
mypy_path="$MYPY_CONFIG_FILE_DIR"
warn_return_any = true
python_version = "3.12"
disallow_untyped_defs = true
disallow_incomplete_defs = true
show_error_codes = true
show_error_context = true


# ==== pylint ====
[tool.pylint.messages_control]
max-line-length = 119
disable = """
    too-many-arguments,
    not-callable,
    fixme
"""

[tool.pylint.reports]
output-format = "colorized"
